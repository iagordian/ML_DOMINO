28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:35 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='DecisionTreeClassifier', model_obj=b'\x80\x04\x95C\x02\x00\x00\x00\x00\x00\x00\x8c\x15sklearn.tree._classes\x94\x8c\x16DecisionTreeClassifier\x94\x93\x94)\x81\x94}\x94(\x8c\tcriterion\x94\x8c\x04gini\x94\x8c\x08splitter\x94\x8c\x04best\x94\x8c\tmax_depth\x94K \x8c\x11min_samples_split\x94K\x04\x8c\x10min_samples_leaf\x94K\x01\x8c\x18min_weight_fraction_leaf\x94G\x00\x00\x00\x00\x00\x00\x00\x00\x8c\x0cmax_features\x94N\x8c\x0emax_leaf_nodes\x94N\x8c\x0crandom_state\x94K*\x8c\x15min_impurity_decrease\x94G\x00\x00\x00\x00\x00\x00\x00\x00\x8c\x0cclass_weight\x94N\x8c\tccp_alpha\x94G\x00\x00\x00\x00\x00\x00\x00\x00\x8c\rmonotonic_cst\x94N\x8c\x0en_features_in_\x94K\x15\x8c\nn_outputs_\x94K\x01\x8c\x08classes_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94\x8c\x05numpy\x94\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x07\x85\x94\x8c\x05order\x94\x8c\x01C\x94\x8c\x05dtype\x94h\x1d\x8c\x05dtype\x94\x93\x94\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\x01\xff\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x95\x9f\x00\x00\x00\x00\x00\x00\x00\x8c\nn_classes_\x94\x8c\x16numpy._core.multiarray\x94\x8c\x06scalar\x94\x93\x94h)C\x08\x07\x00\x00\x00\x00\x00\x00\x00\x94\x86\x94R\x94\x8c\rmax_features_\x94K\x15\x8c\x05tree_\x94\x8c\x12sklearn.tree._tree\x94\x8c\x04Tree\x94\x93\x94K\x15h\x19)\x81\x94}\x94(h\x1ch\x1fh K\x01\x85\x94h"h#h$h)h,\x88h-K\x10ub\x0f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x07\x00\x00\x00\x00\x00\x00\x00\x95\x8d\x01\x00\x00\x00\x00\x00\x00K\x01\x87\x94R\x94}\x94(h\tK\x14\x8c\nnode_count\x94K+\x8c\x05nodes\x94h\x19)\x81\x94}\x94(h\x1ch\x1fh K+\x85\x94h"h#h$h&\x8c\x03V64\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01|\x94N(\x8c\nleft_child\x94\x8c\x0bright_child\x94\x8c\x07feature\x94\x8c\tthreshold\x94\x8c\x08impurity\x94\x8c\x0en_node_samples\x94\x8c\x17weighted_n_node_samples\x94\x8c\x12missing_go_to_left\x94t\x94}\x94(hIh&\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03h*NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bK\x00\x86\x94hJhUK\x08\x86\x94hKhUK\x10\x86\x94hLh&\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03h*NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bK\x18\x86\x94hMh\\K \x86\x94hNhUK(\x86\x94hOh\\K0\x86\x94hPh&\x8c\x02u1\x94\x89\x88\x87\x94R\x94(K\x03hHNNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bK8\x86\x94uK@K\x01K\x10t\x94bh,\x88h-K\x10ub\x01\xff\x01\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xbc+\x18\xb2\xfdY\xeb?\xb1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 f@\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?|\xfe\x98\xa3t\xfb\xea?\x9c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80c@\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xbf\xc2\x1av\x1d\x90\xea?\x89\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 a@\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x98\xd6\xaau\xc0_\xea?v\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80]@\x01\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?#r\xe6\xd2\x9c\xed\xe9?g\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0Y@\x01\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xf76\x0b\'\x16`\xea?V\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80U@\x01\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xf3\x9e^v\xdf]\xea?J\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80R@\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xd4V\xe7\x16\x86\xdb\xe9?A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@P@\x01\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xfa\xf5]\x01\xb9"\xeb?5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80J@\x01\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?V_\x8b\xe00\xeb\xea?.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00G@\x01\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?L\xfcusr\xd8\xea?\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80C@\x01\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?t\x92Qe\x116\xea?!\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80@@\x01\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\'\xe2\xdc\x03}\xfc\xe9?\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00;@\x01\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xbc\x1f9\xcd\xd7\xea\xe9?\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x006@\x01\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x80\x8f\x9e\xad\xbc\xcb\xea?\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001@\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?s\n^N\xc1\xcb\xe9?\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00,@\x01\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x0f\x81\x1b\xcb\xa0T\xe8?\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&@\x01\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xa4\x0c<\xdd\x9a\x1f\xe6?\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"@\x01\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x92$I\x92$I\xe2?\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c@\x01\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?z\x14\xaeG\xe1z\xd4?\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14@\x01\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00(@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00(@\x00\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x88I\r\xd1\x94X\xbc?\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001@\x01\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x003@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x003@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x005@\x00\x00\x00\x00\x00\x00\x00\x00\x950\x00\x00\x00\x00\x00\x00\x00\x8c\x06values\x94h\x19)\x81\x94}\x94(h\x1ch\x1fh K+K\x01K\x07\x87\x94h"h#h$h\\h,\x88h-K\x10ub\x06\xff\xff\xff\xff\xff\xffCr\x01\xaf\xb7\xd1\xbf?\xe5\x02^o\xa3?\xc4?\xda9X\xb3\xc4\xf8\xc4?\xda9X\xb3\xc4\xf8\xc4?Cr\x01\xaf\xb7\xd1\xbf?W\x04\r\'u_\xbe?\xf9\x94i\xe7`\xcd\xc2?\xd2 \r\xd2 \r\xc2?\x97o\xf9\x96o\xf9\xa6?\xb8|\xcb\xb7|\xcb\xc7?\xb8|\xcb\xb7|\xcb\xc7?\xd2 \r\xd2 \r\xc2?\xb1\x13;\xb1\x13;\xc1?UUUUUU\xc5?\x7f\xdc\xba\xbc\x03\x8e\xc4?\xb9uy\x07\x1c)\xaa?\xed9\x99\xbeJ\x18\xcb?\xed9\x99\xbeJ\x18\xcb?\x7f\xdc\xba\xbc\x03\x8e\xc4?K\x18\x9b\x05\xd5\x9e\xc3?\xb9uy\x07\x1c)\xaa?\xb2\x15A\xc3I\xdd\xc7?W\x04\r\'u_\xae?\xd0pR\xf7\xe5\xb1\xb5?\xc8V\x04\r\'u\xcf?\xb2\x15A\xc3I\xdd\xc7?A\xc3I\xdd\x97\xc7\xc6?W\x04\r\'u_\xae?\xe2\x13H%\xe7e\xb1?\xe2\x13H%\xe7e\xb1?C\xd3\x1d\xec\xb7\xda\xb8?*9/\x8b\xf8\x04\xd2?ch\xba\x83\xfdV\xcb?\xd3\x1d\xec\xb7\xda\x18\xca?\xe2\x13H%\xe7e\xb1?6eMYS\xd6\xb4?6eMYS\xd6\xb4?qG\xdc\x11w\xc4\xbd?\xd6\x945eMY\xc3?\x18\xf4\x05}A_\xd0?qG\xdc\x11w\xc4\xcd?6eMYS\xd6\xb4?v\x83)\xf2Y7\xb8?v\x83)\xf2Y7\xb8?\xc2\x14\xf9\xac\x1bL\xc1?\xc9g\xdd`\x8a|\xc6?o0E>\xeb\x06\xd3?\xd0\xba\xc1\x14\xf9\xac\xbb?v\x83)\xf2Y7\xb8?\x1c\xb9\x91\x1b\xb9\x91\xbb?\x1c\xb9\x91\x1b\xb9\x91\xbb?\x14;\xb1\x13;\xb1\xc3? \xf8\x81\x1f\xf8\x81\xaf?\x96Z\xa9\x95Z\xa9\xd5? \xf8\x81\x1f\xf8\x81\xbf?\x1c\xb9\x91\x1b\xb9\x91\xbb?\xa9\t\xc6[\xd9\xe7\xc0?\xa9\t\xc6[\xd9\xe7\xc0?\xf2V\xf69\xa4&\xc8?\xc1x+\xfb\x1cR\xb3?\xf2V\xf69\xa4&\xc8?\xc1x+\xfb\x1cR\xc3?\xa9\t\xc6[\xd9\xe7\xc0?8\xbd\xe9Moz\xc3?8\xbd\xe9Moz\xc3?\xbd\xe9Moz\xd3\xcb?d!\x0bY\xc8B\xb6?\x0bY\xc8B\x16\xb2\xb0?d!\x0bY\xc8B\xc6?8\xbd\xe9Moz\xc3?\x97o\xf9\x96o\xf9\xc6?\x97o\xf9\x96o\xf9\xc6?\x14;\xb1\x13;\xb1\xb3?\x1a\xa4A\x1a\xa4A\xba?\x14;\xb1\x13;\xb1\xb3?\x1a\xa4A\x1a\xa4A\xca?\x97o\xf9\x96o\xf9\xc6?\'\x9bl\xb2\xc9&\xcb?\x08\x1f|\xf0\xc1\x07\x9f?F\x17]t\xd1E\xb7?\x08\x1f|\xf0\xc1\x07\xbf?F\x17]t\xd1E\xb7?\x08\x1f|\xf0\xc1\x07\xcf?\'\x9bl\xb2\xc9&\xcb?{\t\xed%\xb4\x97\xd0?h/\xa1\xbd\x84\xf6\xa2?\x1c\xc7q\x1c\xc7q\xbc?h/\xa1\xbd\x84\xf6\xc2?\x1c\xc7q\x1c\xc7q\xbc?h/\xa1\xbd\x84\xf6\xb2?{\t\xed%\xb4\x97\xd0?F\x17]t\xd1E\xb7?F\x17]t\xd1E\xa7?t\xd1E\x17]t\xc1?F\x17]t\xd1E\xc7?t\xd1E\x17]t\xc1?F\x17]t\xd1E\xb7?]t\xd1E\x17]\xd4?\x1e\x1e\x1e\x1e\x1e\x1e\xbe?\x1e\x1e\x1e\x1e\x1e\x1e\xae?\x97\x96\x96\x96\x96\x96\xc6?\x1e\x1e\x1e\x1e\x1e\x1e\xce?\x97\x96\x96\x96\x96\x96\xc6?\x1e\x1e\x1e\x1e\x1e\x1e\xbe?\x1e\x1e\x1e\x1e\x1e\x1e\xbe?\x92$I\x92$I\xc2?\x92$I\x92$I\xb2?\x00\x00\x00\x00\x00\x00\x00\x00\x92$I\x92$I\xd2?\xdb\xb6m\xdb\xb6m\xcb?\x92$I\x92$I\xc2?\x92$I\x92$I\xc2?F\x17]t\xd1E\xc7?F\x17]t\xd1E\xb7?\x00\x00\x00\x00\x00\x00\x00\x00F\x17]t\xd1E\xd7?\x00\x00\x00\x00\x00\x00\x00\x00F\x17]t\xd1E\xc7?F\x17]t\xd1E\xc7?\x00\x00\x00\x00\x00\x00\x00\x00\x1c\xc7q\x1c\xc7q\xbc?\x00\x00\x00\x00\x00\x00\x00\x00\x1c\xc7q\x1c\xc7q\xdc?\x00\x00\x00\x00\x00\x00\x00\x00\x1c\xc7q\x1c\xc7q\xcc?\x1c\xc7q\x1c\xc7q\xcc?\x00\x00\x00\x00\x00\x00\x00\x00\x92$I\x92$I\xc2?\x00\x00\x00\x00\x00\x00\x00\x00\x92$I\x92$I\xe2?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x92$I\x92$I\xd2?\x00\x00\x00\x00\x00\x00\x00\x00\x9a\x99\x99\x99\x99\x99\xc9?\x00\x00\x00\x00\x00\x00\x00\x00\x9a\x99\x99\x99\x99\x99\xe9?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x1e\x1e\x1e\x1e\x1e\xee?\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x1e\x1e\x1e\x1e\x1e\xae?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x95 \x00\x00\x00\x00\x00\x00\x00ub\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.', threshold=None, logs={'model_name': 'DecisionTreeClassifier', 'max_depth': 32, 'min_samples_split': 4, 'random_state': 42, 'accuracy': 0.9868421052631579}, is_the_best_classifier_model=0),) {}.

28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:35 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='ComplexDecisionTreeModel', model_obj=None, threshold=None, logs={'model_name': 'ComplexDecisionTreeModel', 'accuracy_6': 1.0, 'accuracy_7': 0.6448598130841121, 'accuracy_9': 0.75, 'accuracy_10': 0.7326732673267327, 'accuracy_11': 0.6699029126213593, 'accuracy_12': 0.8058252427184466, 'accuracy_15': 0.79, 'accuracy_18': 0.74}, is_the_best_classifier_model=0),) {}.

28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:35 ::INFO:: Функция save_threshold производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ForestModelThreshold(min_size=7, threshold=0.45),) {}.

28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:35 ::INFO:: Функция save_threshold производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ForestModelThreshold(min_size=9, threshold=0.35),) {}.

28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:35 ::INFO:: Функция save_threshold производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ForestModelThreshold(min_size=10, threshold=0.35),) {}.

28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:35 ::INFO:: Функция save_threshold производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ForestModelThreshold(min_size=11, threshold=0.45),) {}.

28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:35 ::INFO:: Функция save_threshold производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ForestModelThreshold(min_size=12, threshold=0.3),) {}.

28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:35 ::INFO:: Функция save_threshold производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ForestModelThreshold(min_size=15, threshold=0.3),) {}.

28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:35 ::INFO:: Функция save_threshold производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ForestModelThreshold(min_size=18, threshold=0.3),) {}.

28.08.2024 12:42:35 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/".

28.08.2024 12:42:48 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:48 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/static/scripts/jquery-3.6.4.min.js".

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/static/scripts/bootstrap.js".

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/static/scripts/bootstrap.bundle.js".

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/static/scripts/events.js".

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/static/scripts/manage.js".

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/static/scripts/ajaxJSON.js".

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/static/images/back.png".

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/static/images/clean.png".

28.08.2024 12:42:48 ::INFO:: Запрос на URL "/".

28.08.2024 12:42:48 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:48 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:50 ::INFO:: Запрос на URL "/".

28.08.2024 12:42:50 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:50 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:50 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:50 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:50 ::INFO:: Запрос на URL "/".

28.08.2024 12:42:50 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:50 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:50 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:50 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/".

28.08.2024 12:42:55 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:55 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:55 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:55 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/static/CSS/index.css".

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/static/scripts/jquery-3.6.4.min.js".

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/static/scripts/ajaxJSON.js".

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/static/scripts/bootstrap.js".

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/static/scripts/bootstrap.bundle.js".

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/static/scripts/events.js".

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/static/scripts/manage.js".

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/static/images/back.png".

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/static/images/clean.png".

28.08.2024 12:42:55 ::INFO:: Запрос на URL "/".

28.08.2024 12:42:55 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:55 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:55 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:55 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:42:57 ::INFO:: Запрос на URL "/get_logs".

28.08.2024 12:42:57 ::INFO:: Функция get_all_ML_logs производит запрос к БД с целью извлечения данных.

28.08.2024 12:42:57 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:15 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2],"down":[1,1,2,3,1,1,2]}'.

28.08.2024 12:44:15 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:44:15 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:15 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:44:15 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:15 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (7,) {}.

28.08.2024 12:44:15 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:15 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (0, 0) {}.

28.08.2024 12:44:15 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:34 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,3,4,1,1,3],"down":[1,1,3,4,1,1,4]}'.

28.08.2024 12:44:34 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:44:34 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:34 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:44:34 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:34 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (7,) {}.

28.08.2024 12:44:34 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:34 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (4, 3) {}.

28.08.2024 12:44:34 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:39 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,3,4,1,1,3],"down":[1,1,3,4,1,1,3]}'.

28.08.2024 12:44:39 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:44:39 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:39 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:44:39 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:39 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (7,) {}.

28.08.2024 12:44:39 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:39 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (4, 4) {}.

28.08.2024 12:44:39 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:53 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2],"down":[1,1,2,3,1,1,2]}'.

28.08.2024 12:44:53 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:44:53 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:53 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:44:53 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:53 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (7,) {}.

28.08.2024 12:44:53 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:44:53 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (0, 0) {}.

28.08.2024 12:44:53 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:45:25 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[0,0,2,3,0,0,2],"down":[0,0,2,3,0,0,2]}'.

28.08.2024 12:45:25 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:45:25 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:45:25 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:45:25 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:45:25 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (7,) {}.

28.08.2024 12:45:25 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:45:25 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (3, 3) {}.

28.08.2024 12:45:25 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:00 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2],"down":[1,1,2,3,1,1,2]}'.

28.08.2024 12:46:00 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:00 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:00 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:00 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:00 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (7,) {}.

28.08.2024 12:46:00 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:00 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (0, 0) {}.

28.08.2024 12:46:00 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:06 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0],"down":[1,1,2,3,1,1,2,0]}'.

28.08.2024 12:46:06 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:06 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:06 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:06 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:06 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (8,) {}.

28.08.2024 12:46:06 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:06 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (0, 0) {}.

28.08.2024 12:46:06 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:10 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0,0],"down":[1,1,2,3,1,1,2,0,0]}'.

28.08.2024 12:46:10 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:10 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:10 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:10 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:10 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (9,) {}.

28.08.2024 12:46:10 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:10 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (1, 1) {}.

28.08.2024 12:46:10 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:15 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0,0,1],"down":[1,1,2,3,1,1,2,0,0,1]}'.

28.08.2024 12:46:15 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:15 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:15 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:15 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:15 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (10,) {}.

28.08.2024 12:46:15 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:15 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (3, 3) {}.

28.08.2024 12:46:15 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:19 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0,0,1,3],"down":[1,1,2,3,1,1,2,0,0,1,3]}'.

28.08.2024 12:46:19 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:19 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:19 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:19 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:19 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (11,) {}.

28.08.2024 12:46:19 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:19 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (3, 3) {}.

28.08.2024 12:46:19 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:23 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0,0,1,3,3],"down":[1,1,2,3,1,1,2,0,0,1,3,3]}'.

28.08.2024 12:46:23 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:23 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:23 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:23 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:23 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (12,) {}.

28.08.2024 12:46:23 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:23 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (4, 4) {}.

28.08.2024 12:46:23 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:27 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0,0,1,3,3,4],"down":[1,1,2,3,1,1,2,0,0,1,3,3,4]}'.

28.08.2024 12:46:27 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:27 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:27 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:27 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:27 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (13,) {}.

28.08.2024 12:46:27 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:27 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (6, 6) {}.

28.08.2024 12:46:27 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:32 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0,0,1,3,3,4,6],"down":[1,1,2,3,1,1,2,0,0,1,3,3,4,6]}'.

28.08.2024 12:46:32 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:32 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:32 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:32 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:32 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (14,) {}.

28.08.2024 12:46:32 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:32 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (6, 6) {}.

28.08.2024 12:46:32 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:38 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0,0,1,3,3,4,6,6],"down":[1,1,2,3,1,1,2,0,0,1,3,3,4,6,6]}'.

28.08.2024 12:46:38 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:38 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:38 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:38 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:38 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (15,) {}.

28.08.2024 12:46:38 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:38 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (3, 3) {}.

28.08.2024 12:46:38 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:43 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0,0,1,3,3,4,6,6,3],"down":[1,1,2,3,1,1,2,0,0,1,3,3,4,6,6,3]}'.

28.08.2024 12:46:43 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:43 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:43 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:43 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:43 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (16,) {}.

28.08.2024 12:46:43 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:43 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (3, 3) {}.

28.08.2024 12:46:43 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:49 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1,1,2,0,0,1,3,3,4,6,6,3,3],"down":[1,1,2,3,1,1,2,0,0,1,3,3,4,6,6,3,3]}'.

28.08.2024 12:46:49 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:46:49 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:49 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:46:49 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:49 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (17,) {}.

28.08.2024 12:46:49 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:46:49 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (3, 3) {}.

28.08.2024 12:46:49 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:47:21 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,2,3,1],"down":[1,1,2,3,1]}'.

28.08.2024 12:47:21 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:47:21 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:47:21 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:47:21 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:47:21 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (5,) {}.

28.08.2024 12:47:21 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:47:21 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (5, 5) {}.

28.08.2024 12:47:21 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:48:06 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[2,2,2,2,2],"down":[6,6,6,6,6]}'.

28.08.2024 12:48:06 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:48:06 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:48:06 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:48:06 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:48:06 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (5,) {}.

28.08.2024 12:48:06 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:48:06 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (2, 6) {}.

28.08.2024 12:48:06 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:57:48 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[2,2,2,2,2],"down":[2,2,2,2,2]}'.

28.08.2024 12:57:48 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:57:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:57:48 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:57:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:57:48 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (5,) {}.

28.08.2024 12:57:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:57:48 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (2, 2) {}.

28.08.2024 12:57:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:57:57 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[3,0,3,0,3],"down":[5,0,5,0,5]}'.

28.08.2024 12:57:57 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:57:57 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:57:57 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:57:57 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:57:57 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (5,) {}.

28.08.2024 12:57:57 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:57:57 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (0, 0) {}.

28.08.2024 12:57:57 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:58:29 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,2,3,4,5,6,5],"down":[1,2,3,4,5,6,5]}'.

28.08.2024 12:58:29 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:58:29 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:58:29 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:58:29 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:58:29 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (7,) {}.

28.08.2024 12:58:29 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:58:29 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (6, 6) {}.

28.08.2024 12:58:29 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:58:48 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[2,3,4,5,6,5,4],"down":[2,3,4,5,6,5,4]}'.

28.08.2024 12:58:48 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:58:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:58:48 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:58:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:58:48 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (7,) {}.

28.08.2024 12:58:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:58:48 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (6, 6) {}.

28.08.2024 12:58:48 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:59:16 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[0,1,2,3,4,5],"down":[0,1,2,3,4,5]}'.

28.08.2024 12:59:16 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:59:16 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:59:16 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:59:16 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:59:16 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (6,) {}.

28.08.2024 12:59:16 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:59:16 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (6, 6) {}.

28.08.2024 12:59:16 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:59:31 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[0,1,2,3,4,5,6],"down":[0,1,2,3,4,5,6]}'.

28.08.2024 12:59:31 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

28.08.2024 12:59:31 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:59:31 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

28.08.2024 12:59:31 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:59:31 ::INFO:: Функция get_threshold производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (7,) {}.

28.08.2024 12:59:31 ::INFO:: Запрос к БД произведен успешно

28.08.2024 12:59:31 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (3, 3) {}.

28.08.2024 12:59:31 ::INFO:: Запрос к БД произведен успешно

28.08.2024 13:02:21 ::INFO:: Запрос на URL "/get_logs".

28.08.2024 13:02:21 ::INFO:: Функция get_all_ML_logs производит запрос к БД с целью извлечения данных.

28.08.2024 13:02:21 ::INFO:: Запрос к БД произведен успешно

28.08.2024 13:02:55 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='LinearRegression', model_obj=b"\x80\x04\x95W\x01\x00\x00\x00\x00\x00\x00\x8c\x1asklearn.linear_model._base\x94\x8c\x10LinearRegression\x94\x93\x94)\x81\x94}\x94(\x8c\rfit_intercept\x94\x88\x8c\x06copy_X\x94\x88\x8c\x06n_jobs\x94N\x8c\x08positive\x94\x89\x8c\x0en_features_in_\x94K\x18\x8c\x05coef_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94\x8c\x05numpy\x94\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x01K\x18\x86\x94\x8c\x05order\x94\x8c\x01C\x94\x8c\x05dtype\x94h\x11\x8c\x05dtype\x94\x93\x94\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\r\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xe7,\xf3\x98\xcf\xd8\xbf\xbfP\x83Y\xdc\xdf\xa8x\xbf,L=\xe7/\xa9\x8c\xbf\x06X\x1e\xc3D\x0f\x9f\xbf|B\rbW\xd2\xb2?r\xa1\x8e\x10\xcf\x98\xaf?\xf9\xf8Ys\x91\xc2\xa1\xbf\xe8\x8d\xa7q\xa1K\xa3?\xb3/\xf3\x98\xcf\xd8\xbf\xbf\xbc\x83Y\xdc\xdf\xa8x\xbf\x91J=\xe7/\xa9\x8c\xbf\xd9Z\x1e\xc3D\x0f\x9f\xbfYB\rbW\xd2\xb2?a\xa1\x8e\x10\xcf\x98\xaf?\xeb\xf8Ys\x91\xc2\xa1\xbfh\x8f\xa7q\xa1K\xa3?\x1fK;c\xb6\xe62\xbf\xd2?<\x06\xe0\xc1~\xbf\xfe\xe2}\xb7\xa3\xc4\xa8?\xc3\x82@\x00\xde\xfd\x87?\x00H\xbf%Mi\xdb>\x00\x17\x16-\x16\xbe\x90\xbf\x9eI\xde\x89W\xea\x93?-lI\x91`\xb9\x9e?\x959\x00\x00\x00\x00\x00\x00\x00\x8c\x05rank_\x94K\x18\x8c\tsingular_\x94h\r)\x81\x94}\x94(h\x10h\x13h\x14K\x18\x85\x94h\x16h\x17h\x18h\x1dh \x88h!K\x10ub\r\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xdcE5\xc7\xf7~\x8c@\x9e;&\xf7\x11\x86\x85@\x7fD\x92\xd6^K\x82@Z\x81\x05xE\x06\x82@pA!\x01V\x1e\x81@\xc4\xf8\x9f\xe6\xed9\x7f@\x86\xfeYt\xa2 \x7f@\xc5A\x95gRE{@R\xe5|\x1e\xcc:{@\xb2/\xebom\xddx@\xd4\x8f'@\\\xaau@\x91\x15\xb7\x9b\xb8Nt@\xaa3\xb8\x98\xfb\xf6s@\xdcF:\x82/\x13r@\x02\x89\x82\x14\x9b\xedn@\x8bV\x7f\xe8\xc7\x1cl@\xa5\xda\x92[\xba\xefj@\xed\x81\xfd\x80v\xf3i@\xcd.\x0e-\x0e\xccf@\xdd\x01f\x01}\xd7e@\xacnWx\xae\xfdc@\x87vlQku]@\x8b\x80\x03\xa2\x9al\\@\xb7\x0f\xe5o\xe7\x86V@\x950\x00\x00\x00\x00\x00\x00\x00\x8c\nintercept_\x94h\r)\x81\x94}\x94(h\x10h\x13h\x14K\x01\x85\x94h\x16h\x17h\x18h\x1dh \x88h!K\x10ub\x06\xff\xff\xff\xff\xff\xffV\xcbL\xb4\xb1\xc8\xc6?\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.", threshold=0.5, logs={'model_name': 'LinearRegression', 'AUC': 0.5, 'intercept_': np.float64(0.1779996996279702), 'coef_': [np.float64(-0.12440202221039308), np.float64(-0.006020426231402379), np.float64(-0.013994573826186928), np.float64(-0.030331682595338826), np.float64(0.07352205413668317), np.float64(0.06171271397699031), np.float64(-0.034687562304485504), np.float64(0.03768639099487442), np.float64(-0.12440202221040302), np.float64(-0.006020426231402472), np.float64(-0.013994573826186215), np.float64(-0.030331682595341334), np.float64(0.07352205413668268), np.float64(0.06171271397699019), np.float64(-0.03468756230448541), np.float64(0.037686390994877084), np.float64(-0.00028840973685111295), np.float64(-0.007509112448829529), np.float64(0.04837524046792473), np.float64(0.011714681990328107), np.float64(6.535371166864826e-06), np.float64(-0.016350122930382405), np.float64(0.019448631086172), np.float64(0.030004032962420425)], 'col_names': {'entrope': np.float64(-0.12440202221039308), 'entrope_secondary': np.float64(-0.006020426231402379), 'entrope_ternary': np.float64(-0.013994573826186928), 'clear_ordered': np.float64(-0.030331682595338826), 'secondary_ordered': np.float64(0.07352205413668317), 'ternary_ordered': np.float64(0.06171271397699031), 'order_degree': np.float64(-0.034687562304485504), 'binary_order_degree': np.float64(0.03768639099487442)}, 'precision': np.float64(0.9897326617590081), 'recall': np.float64(0.8845221606648199), 'accuracy': 0.9758397369215798, 'f1': np.float64(0.9758397369215798)}, is_the_best_classifier_model=None),) {}.

28.08.2024 13:02:55 ::INFO:: Запрос к БД произведен успешно

28.08.2024 13:02:55 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='StandardScaler', model_obj=b'\x80\x04\x95\xad\x01\x00\x00\x00\x00\x00\x00\x8c\x1bsklearn.preprocessing._data\x94\x8c\x0eStandardScaler\x94\x93\x94)\x81\x94}\x94(\x8c\twith_mean\x94\x88\x8c\x08with_std\x94\x88\x8c\x04copy\x94\x88\x8c\x0en_features_in_\x94K\x18\x8c\x0fn_samples_seen_\x94\x8c\x16numpy._core.multiarray\x94\x8c\x06scalar\x94\x93\x94\x8c\x05numpy\x94\x8c\x05dtype\x94\x93\x94\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bC\x08it\x00\x00\x00\x00\x00\x00\x94\x86\x94R\x94\x8c\x05mean_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94h\r\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x18\x85\x94\x8c\x05order\x94\x8c\x01C\x94\x8c\x05dtype\x94h\x0f\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03h\x13NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\x07\xff\xff\xff\xff\xff\xff\xff\xdbr\x9cy\xf6a\xfd?\xc2\x87<\xcc\xdd\x96\xe2?\xe1\xe7\x8b\xdb\xc8b\xf0?\xff\x92\xe8\x8edV\x7f?\x18\xe01\x82\xecT\xb2?E{"\x82\xdb\xd7\xc8?y\xa8+6\xae\x88\xe1?d\x96\xcb\xb3\x8e\xbc\xe2?\xb3s\x9cy\xf6a\xfd?\x87\x88<\xcc\xdd\x96\xe2?p\xe7\x8b\xdb\xc8b\xf0?\xff\x92\xe8\x8edV\x7f?\x18\xe01\x82\xecT\xb2?E{"\x82\xdb\xd7\xc8?\xa2\xa8+6\xae\x88\xe1?\x90\x96\xcb\xb3\x8e\xbc\xe2?\x88\xfc\x01\x18\x94\t\xcc?\xaa\x9f\xb9\xc0yS\xc4?\xce\xdd\xdeK\xbb\xa7\xcb?\xab\x9a\xf3*\xb8\x19\x8e?\xc4\xef\x11\x18\xde\xb2\xba?\xfe\xff\xd8[\xdc\xec\xd3?\xa0\xc2\x01\xc6\x86\x1f\xaa?\xacPm\x96\x0f\xc5\x95?\x95*\x00\x00\x00\x00\x00\x00\x00\x8c\x04var_\x94h\x1b)\x81\x94}\x94(h\x1eh h!K\x18\x85\x94h#h$h%h(h*\x88h+K\x10ub\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x16\xcf\x07\x9c\xc7\xc8?\xdbzf\x81\x86\x96\xb8?\x12Y\xb3\xc5\xe2\xf0\xc3?\x81\x19\xc3\xf6\x03\x19\x7f?[\xf6\xd2\x13\xdf\x04\xb1?\x90\xe9s,}\x05\xc4?\xec\xbbN\xeb\xbf\x1f\x9a?7\xc7\xccd\x80\xca\x85?\xfc\x19\xcf\x07\x9c\xc7\xc8?\xbb{f\x81\x86\x96\xb8?\x0fY\xb3\xc5\xe2\xf0\xc3?\x18\x1f\xc3\xf6\x03\x19\x7f?4\xf6\xd2\x13\xdf\x04\xb1?p\xe9s,}\x05\xc4?6\xbcN\xeb\xbf\x1f\x9a?\x89\xca\xccd\x80\xca\x85?#7om=h\xc0?#n8\xc9\xea\xae\xae?\x087k\xd9\tB\xbf?-\xa1\x01\xf3v\xa8\x8d?\xd2L\x94\x01\x0c\xea\xb7?\x875h\xd2\x99q\xcb?\xc7\xae?\xe2 \x98q?0\xe4\xbcn(=P?\x95,\x00\x00\x00\x00\x00\x00\x00\x8c\x06scale_\x94h\x1b)\x81\x94}\x94(h\x1eh h!K\x18\x85\x94h#h$h%h(h*\x88h+K\x10ub\n\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff=j\x0f\xb7\xcd(\xdc?\x0cu9\x88\xa2\xd5\xd3?v\xfc\x88N\xc7B\xd9?\xd2\xfa;\x95^N\xb6?\xe9\xe2A\'l\x80\xd0?\xbb/\xa1\xb3\xd0O\xd9?\xc1\xaf]\x9c\xd5q\xc4?\x8ceL\x1c\x1ch\xba?\x80l\x0f\xb7\xcd(\xdc?fu9\x88\xa2\xd5\xd3?t\xfc\x88N\xc7B\xd9?\xd4\xfc;\x95^N\xb6?\xd6\xe2A\'l\x80\xd0?\xa7/\xa1\xb3\xd0O\xd9?\xde\xaf]\x9c\xd5q\xc4?\x8fgL\x1c\x1ch\xba?\xaeP9L\xdd\xe9\xd6?\xe4\x1f#,\xb0U\xcf?\x1c=H3\x10]\xd6?Uc\xa0\x8b\x89\xce\xbe?\xab\x98\x17\xac\x95\x8f\xd3?O\xf0\xee\xbdj\xa2\xdd?;\t\x01.8\xc7\xb0? \xe1\x1c6w\x1e\xa0?\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.', threshold=None, logs=None, is_the_best_classifier_model=None),) {}.

28.08.2024 13:02:55 ::INFO:: Запрос к БД произведен успешно

28.08.2024 13:02:56 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='LogisticRegression', model_obj=b'\x80\x04\x95\x16\x02\x00\x00\x00\x00\x00\x00\x8c\x1esklearn.linear_model._logistic\x94\x8c\x12LogisticRegression\x94\x93\x94)\x81\x94}\x94(\x8c\x07penalty\x94\x8c\x02l2\x94\x8c\x04dual\x94\x89\x8c\x03tol\x94G?\x1a6\xe2\xeb\x1cC-\x8c\x01C\x94G?\xe0\x00\x00\x00\x00\x00\x00\x8c\rfit_intercept\x94\x88\x8c\x11intercept_scaling\x94K\x01\x8c\x0cclass_weight\x94N\x8c\x0crandom_state\x94N\x8c\x06solver\x94\x8c\x05lbfgs\x94\x8c\x08max_iter\x94Kd\x8c\x0bmulti_class\x94\x8c\ndeprecated\x94\x8c\x07verbose\x94K\x00\x8c\nwarm_start\x94\x89\x8c\x06n_jobs\x94N\x8c\x08l1_ratio\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\x0en_features_in_\x94K\x18\x8c\x08classes_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94\x8c\x05numpy\x94\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x02\x85\x94\x8c\x05order\x94h\t\x8c\x05dtype\x94h\x1f\x8c\x05dtype\x94\x93\x94\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\x0e\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x95O\x00\x00\x00\x00\x00\x00\x00\x8c\x07n_iter_\x94h\x1b)\x81\x94}\x94(h\x1eh!h"K\x01\x85\x94h$h\th%h\'\x8c\x02i4\x94\x89\x88\x87\x94R\x94(K\x03h+NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bh-\x88h.K\x10ub\x07\xff\xff\xff\xff\xff\xff\xff\x14\x00\x00\x00\x95O\x00\x00\x00\x00\x00\x00\x00\x8c\x05coef_\x94h\x1b)\x81\x94}\x94(h\x1eh!h"K\x01K\x18\x86\x94h$h\th%h\'\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03h+NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bh-\x88h.K\x10ub\x03\xff\xff\xffYh]G\xb4\xbc\t\xc0\x17\xbd\x1b\xd7i>\xf9\xbf$\\\xda\xe9\x170\xe7?\xb7(\xa9\xdd\xc2"\xe4?\x91.\xf2\x15\xb5\x88\xf7?!\x86\xce\x17e\xfd\xfb?>K\xf6\x08\x95\xf9\xe7\xbf\xb1\xc0\x1a\xd0_k\xe9?\x9fj]G\xb4\xbc\t\xc0\xd3\xbd\x1b\xd7i>\xf9\xbf\xff[\xda\xe9\x170\xe7?M\'\xa9\xdd\xc2"\xe4?\x13.\xf2\x15\xb5\x88\xf7?\xea\x85\xce\x17e\xfd\xfb?\xffK\xf6\x08\x95\xf9\xe7\xbf]\xc2\x1a\xd0_k\xe9?\x10\xef\xf4\x01:+\xef?a-\xf9(\xe55\xf2?\x87\x9e\x1f_\x05;\xbf?;}\x1a\x7f\x93\xf2\xeb?\x01\xc0V\xfd\xa0\xe7\xb9\xbf\xb2+\xa0\xc9\xdd\xd8\xc6\xbfT\xae\xdf\xb6\xcb8\xb8\xbf"\x96\\\xb7\xa8\x00\xd8?\x950\x00\x00\x00\x00\x00\x00\x00\x8c\nintercept_\x94h\x1b)\x81\x94}\x94(h\x1eh!h"K\x01\x85\x94h$h\th%h=h-\x88h.K\x10ub\x06\xff\xff\xff\xff\xff\xff\xdcQ\xf2\x86\x95\x1b\x1e\xc0\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.', threshold=0.44, logs={'model_name': 'LogisticRegression', 'C': 0.5, 'dual': False, 'l1_ratio': 0.1, 'penalty': 'l2', 'AUC': 0.44, 'intercept_': np.float64(-7.526937588253045), 'coef_': [np.float64(-3.217140729463648), np.float64(-1.577737655894287), np.float64(0.724620777839736), np.float64(0.6292433099090634), np.float64(1.4708758218065763), np.float64(1.7493639879179528), np.float64(-0.7492165732422575), np.float64(0.7943572105923719), np.float64(-3.2171407294639063), np.float64(-1.5777376558943288), np.float64(0.7246207778397319), np.float64(0.6292433099090232), np.float64(1.4708758218065483), np.float64(1.7493639879179406), np.float64(-0.749216573242279), np.float64(0.7943572105924194), np.float64(0.9740266836374492), np.float64(1.1381579971810754), np.float64(0.12199433872558006), np.float64(0.873361347435924), np.float64(-0.10119062600165309), np.float64(-0.17849323601725825), np.float64(-0.0946166345090032), np.float64(0.3750402250901478)], 'col_names': {'entrope': np.float64(-3.217140729463648), 'entrope_secondary': np.float64(-1.577737655894287), 'entrope_ternary': np.float64(0.724620777839736), 'clear_ordered': np.float64(0.6292433099090634), 'secondary_ordered': np.float64(1.4708758218065763), 'ternary_ordered': np.float64(1.7493639879179528), 'order_degree': np.float64(-0.7492165732422575), 'binary_order_degree': np.float64(0.7943572105923719)}, 'precision': np.float64(0.9896678966789668), 'recall': np.float64(0.9286703601108033), 'accuracy': 0.9842958289990269, 'f1': np.float64(0.9842958289990269)}, is_the_best_classifier_model=None),) {}.

28.08.2024 13:02:56 ::INFO:: Запрос к БД произведен успешно

28.08.2024 13:03:00 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='SGDClassifier', model_obj=b"\x80\x04\x95\x91\x02\x00\x00\x00\x00\x00\x00\x8c)sklearn.linear_model._stochastic_gradient\x94\x8c\rSGDClassifier\x94\x93\x94)\x81\x94}\x94(\x8c\x04loss\x94\x8c\x0emodified_huber\x94\x8c\x07penalty\x94N\x8c\rlearning_rate\x94\x8c\x07optimal\x94\x8c\x07epsilon\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\x05alpha\x94G?\x1a6\xe2\xeb\x1cC-\x8c\x01C\x94G?\xf0\x00\x00\x00\x00\x00\x00\x8c\x08l1_ratio\x94G?\xc3333333\x8c\rfit_intercept\x94\x88\x8c\x07shuffle\x94\x88\x8c\x0crandom_state\x94N\x8c\x07verbose\x94K\x00\x8c\x04eta0\x94G\x00\x00\x00\x00\x00\x00\x00\x00\x8c\x07power_t\x94G?\xe0\x00\x00\x00\x00\x00\x00\x8c\x0eearly_stopping\x94\x89\x8c\x13validation_fraction\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\x10n_iter_no_change\x94K\x05\x8c\nwarm_start\x94\x89\x8c\x07average\x94\x89\x8c\x08max_iter\x94M\xe8\x03\x8c\x03tol\x94G?PbM\xd2\xf1\xa9\xfc\x8c\x0cclass_weight\x94N\x8c\x06n_jobs\x94K\x01\x8c\x05coef_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94\x8c\x05numpy\x94\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x01K\x18\x86\x94\x8c\x05order\x94h\x0c\x8c\x05dtype\x94h$\x8c\x05dtype\x94\x93\x94\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\x03\xff\xff\xff\xc26O\x1d\x1c\x11Z\xc0z?\xb7\xa4MCK\xc0\xa6*^\x91JJJ@\xce%)9\x89\x831@\x04\xe2\xb9\x9e4\t>@\xd4Y\xdc\x9f}`C@\rS\xd0Ou\xee\xf2\xbf\xed\x7f\xdeJ\x83\xa6<@\xf6\x1b\x9a\x0e\x11\x13Z\xc0\xefu|\x9f\x99DK\xc0T;\xdezTOJ@3$)9\x89\x831@k\x80\x03+\r\x07>@\x1e\xf3\xc3C0]C@w)\xab+j|\xf2\xbf2\xe5\xdca+\xa4<@|C\xcf\xc0\xd4A8@\x08\xa2\xb5\x94\n;B@\xcd\x9b\xce\x1d\x9d\xd3\x1a\xc0\xe0\xa1\xc8it\\8@\xe7\xfcD\x9f=P\xd5\xbf\x18\xfe\\\xf5FT'\xc0h\xe1bi\xfdx\xe0\xbfq\x12\x08\xbb\xc6\x8c,@\x950\x00\x00\x00\x00\x00\x00\x00\x8c\nintercept_\x94h )\x81\x94}\x94(h#h&h'K\x01\x85\x94h)h\x0ch*h/h2\x88h3K\x10ub\x06\xff\xff\xff\xff\xff\xffIRH\xb4\xcb\xeeh\xc0\x95q\x00\x00\x00\x00\x00\x00\x00\x8c\x02t_\x94GA\x8b\x84\x8f\xd8\x00\x00\x00\x8c\x0en_features_in_\x94K\x18\x8c\x08classes_\x94h )\x81\x94}\x94(h#h&h'K\x02\x85\x94h)h\x0ch*h,\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03h0NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bh2\x88h3K\x10ub\r\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x95<\x00\x00\x00\x00\x00\x00\x00\x8c\x16_expanded_class_weight\x94h )\x81\x94}\x94(h#h&h'K\x02\x85\x94h)h\x0ch*h/h2\x88h3K\x10ub\n\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x95s\x00\x00\x00\x00\x00\x00\x00\x8c\x0f_loss_function_\x94\x8c\x1esklearn.linear_model._sgd_fast\x94\x8c\rModifiedHuber\x94\x93\x94)R\x94\x8c\x07n_iter_\x94Me\x01\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.", threshold=0.4, logs={'model_name': 'SGDClassifier', 'loss': 'modified_huber', 'penalty': None, 'n_jobs': 1, 'AUC': 0.4, 'intercept_': np.float64(-199.46236623883513), 'coef_': [np.float64(-104.26734097228749), np.float64(-54.52580698917059), np.float64(52.58040062997797), np.float64(17.513812611146754), np.float64(30.035959167844354), np.float64(38.75383375415154), np.float64(-1.1832173459744724), np.float64(28.65044086391565), np.float64(-104.29791607904176), np.float64(-54.53593820168668), np.float64(52.61976562358055), np.float64(17.513812611145294), np.float64(30.027544678072825), np.float64(38.72803542201858), np.float64(-1.1553746896557564), np.float64(28.641286961011424), np.float64(24.257152605630367), np.float64(36.46126040333553), np.float64(-6.706654039130581), np.float64(24.361151324732305), np.float64(-0.3330225043645911), np.float64(-11.66460387001193), np.float64(-0.5147692735982163), np.float64(14.274953694091183)], 'col_names': {'entrope': np.float64(-104.26734097228749), 'entrope_secondary': np.float64(-54.52580698917059), 'entrope_ternary': np.float64(52.58040062997797), 'clear_ordered': np.float64(17.513812611146754), 'secondary_ordered': np.float64(30.035959167844354), 'ternary_ordered': np.float64(38.75383375415154), 'order_degree': np.float64(-1.1832173459744724), 'binary_order_degree': np.float64(28.65044086391565)}, 'precision': np.float64(0.9884084636614535), 'recall': np.float64(0.9300554016620498), 'accuracy': 0.9843293849199691, 'f1': np.float64(0.9843293849199691)}, is_the_best_classifier_model=None),) {}.

28.08.2024 13:03:00 ::INFO:: Запрос к БД произведен успешно

28.08.2024 13:03:00 ::INFO:: Функция set_best_model производит запрос к БД с целью занесения данных.
В функцию переданы аргументы ('SGDClassifier',) {}.

28.08.2024 13:03:00 ::INFO:: Запрос к БД произведен успешно

