20.08.2024 14:47:53 ::INFO:: Запрос к БД произведен успешно

20.08.2024 14:47:53 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='DecisionTreeClassifier', model_obj=b'\x80\x04\x95C\x02\x00\x00\x00\x00\x00\x00\x8c\x15sklearn.tree._classes\x94\x8c\x16DecisionTreeClassifier\x94\x93\x94)\x81\x94}\x94(\x8c\tcriterion\x94\x8c\x04gini\x94\x8c\x08splitter\x94\x8c\x04best\x94\x8c\tmax_depth\x94K \x8c\x11min_samples_split\x94K\x04\x8c\x10min_samples_leaf\x94K\x01\x8c\x18min_weight_fraction_leaf\x94G\x00\x00\x00\x00\x00\x00\x00\x00\x8c\x0cmax_features\x94N\x8c\x0emax_leaf_nodes\x94N\x8c\x0crandom_state\x94K*\x8c\x15min_impurity_decrease\x94G\x00\x00\x00\x00\x00\x00\x00\x00\x8c\x0cclass_weight\x94N\x8c\tccp_alpha\x94G\x00\x00\x00\x00\x00\x00\x00\x00\x8c\rmonotonic_cst\x94N\x8c\x0en_features_in_\x94K\x15\x8c\nn_outputs_\x94K\x01\x8c\x08classes_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94\x8c\x05numpy\x94\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x07\x85\x94\x8c\x05order\x94\x8c\x01C\x94\x8c\x05dtype\x94h\x1d\x8c\x05dtype\x94\x93\x94\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\x01\xff\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x95\x9f\x00\x00\x00\x00\x00\x00\x00\x8c\nn_classes_\x94\x8c\x16numpy._core.multiarray\x94\x8c\x06scalar\x94\x93\x94h)C\x08\x07\x00\x00\x00\x00\x00\x00\x00\x94\x86\x94R\x94\x8c\rmax_features_\x94K\x15\x8c\x05tree_\x94\x8c\x12sklearn.tree._tree\x94\x8c\x04Tree\x94\x93\x94K\x15h\x19)\x81\x94}\x94(h\x1ch\x1fh K\x01\x85\x94h"h#h$h)h,\x88h-K\x10ub\x0f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x07\x00\x00\x00\x00\x00\x00\x00\x95\x8d\x01\x00\x00\x00\x00\x00\x00K\x01\x87\x94R\x94}\x94(h\tK\x14\x8c\nnode_count\x94K+\x8c\x05nodes\x94h\x19)\x81\x94}\x94(h\x1ch\x1fh K+\x85\x94h"h#h$h&\x8c\x03V64\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01|\x94N(\x8c\nleft_child\x94\x8c\x0bright_child\x94\x8c\x07feature\x94\x8c\tthreshold\x94\x8c\x08impurity\x94\x8c\x0en_node_samples\x94\x8c\x17weighted_n_node_samples\x94\x8c\x12missing_go_to_left\x94t\x94}\x94(hIh&\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03h*NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bK\x00\x86\x94hJhUK\x08\x86\x94hKhUK\x10\x86\x94hLh&\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03h*NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bK\x18\x86\x94hMh\\K \x86\x94hNhUK(\x86\x94hOh\\K0\x86\x94hPh&\x8c\x02u1\x94\x89\x88\x87\x94R\x94(K\x03hHNNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bK8\x86\x94uK@K\x01K\x10t\x94bh,\x88h-K\x10ub\x01\xff\x01\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xfa\xfa\xb8/\xd3P\xeb?\xaf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0e@\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xda\xec\xe2\xc0p9\xeb?\x98\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00c@\x01\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0? \x18Qb$\xf2\xea?\x86\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0`@\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x94U w\x8e\xae\xea?u\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@]@\x01\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xa8\xca\xed\x104W\xea?f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80Y@\x01\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xe5r\x8b\x15\xd3/\xea?W\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0U@\x01\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x86\x82\xb6\xb0\xe7Q\xea?J\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80R@\x01\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?8\x9a\xa7\x81%R\xeb?;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80M@\x01\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xaa\'\xa5"\xa0\x1d\xeb?3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80I@\x01\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x13\xefGN\xf3\xb5\xea?,\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F@\x01\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x08\xad,\x99\xe8\xf8\xe9?&\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00C@\x01\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x00\x00\x00\x00\x00`\xe9? \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@@\x01\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xd0\x1fs\x94n_\xe9?\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00:@\x01\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?G\xb6\xf6\x8fH\x1b\xe9?\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x005@\x01\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?n\xcd\x0f\x8b\x94\x81\xe7?\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x002@\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xc6\xb5HPS!\xea?\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00*@\x01\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xf6(\\\x8f\xc2\xf5\xe8?\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$@\x01\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x00\x00\x00\x00\x00\x00\xe7?\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 @\x01\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\xe48\x8e\xe38\x8e\xe3?\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18@\x01\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x00\x00\x00\x00\x00\x00\xd8?\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10@\x01\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 @\x00\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x88\xca\x0eS\x97\xdb\xbf?\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.@\x01\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00,@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00*@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00.@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x002@\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x007@\x00\x00\x00\x00\x00\x00\x00\x00\x950\x00\x00\x00\x00\x00\x00\x00\x8c\x06values\x94h\x19)\x81\x94}\x94(h\x1ch\x1fh K+K\x01K\x07\x87\x94h"h#h$h\\h,\x88h-K\x10ub\x06\xff\xff\xff\xff\xff\xff\xaa4\xe4\xdcg\x17\xc0?\x92$I\x92$I\xc2?L\xf4w\xb2Z\xde\xc8?\xf7\xd9\x05\xc4\xa6\xd2\xc0?\xaa4\xe4\xdcg\x17\xc0?\xf7\xd9\x05\xc4\xa6\xd2\xc0?\xe0\xc9jyc\x04\xc3?l(\xaf\xa1\xbc\x86\xc2?\xd8P^Cy\r\xc5?l(\xaf\xa1\xbc\x86\xb2?\xe55\x94\xd7P^\xc3?l(\xaf\xa1\xbc\x86\xc2?\xe55\x94\xd7P^\xc3?Q^Cy\r\xe5\xc5?\x17~5&\xd2\x03\xc5?I\x0fT\xcen\xe1\xc7?\x17~5&\xd2\x03\xb5?\xd2\x03\x95\xb3[\xf8\xc5?\x17~5&\xd2\x03\xc5?\xd2\x03\x95\xb3[\xf8\xc5?g\xb7\xf0\xab1\x91\xae?\x18\x81\x11\x18\x81\x11\xc8?\x12\x18\x81\x11\x18\x81\xb1?\x18\x81\x11\x18\x81\x11\xb8?\x99\x92)\x99\x92)\xc9?\x18\x81\x11\x18\x81\x11\xc8?\x99\x92)\x99\x92)\xc9?\x12\x18\x81\x11\x18\x81\xb1?\x92\x91\x91\x91\x91\x91\xb1?\x14\x14\x14\x14\x14\x14\xb4?\x9c\x9b\x9b\x9b\x9b\x9b\xbb?\xdd\xdc\xdc\xdc\xdc\xdc\xcc?\x9c\x9b\x9b\x9b\x9b\x9b\xcb?\xdd\xdc\xdc\xdc\xdc\xdc\xcc?\x14\x14\x14\x14\x14\x14\xb4?/\x90I\xf1\x02\x99\xb4?\xc8\xa4x\x81L\x8a\xb7?J\xf1\x02\x99\x14/\xc0?p\xb6\x0e\xfdf\xeb\xd0?J\xf1\x02\x99\x14/\xd0?\xc8\xa4x\x81L\x8a\xb7?\xc8\xa4x\x81L\x8a\xb7?v\x83)\xf2Y7\xb8?\xd0\xba\xc1\x14\xf9\xac\xbb?o0E>\xeb\x06\xc3?E>\xeb\x06S\xe4\xd3?*\xf2Y7\x98"\xbf?\xd0\xba\xc1\x14\xf9\xac\xbb?\xd0\xba\xc1\x14\xf9\xac\xbb?W\x04\r\'u_\xbe?\r\'u_\x1e[\xc1?\xb2\x15A\xc3I\xdd\xc7?\xef\xcbc+\x82\x86\xc3?\xef\xcbc+\x82\x86\xc3?W\x04\r\'u_\xbe?\r\'u_\x1e[\xc1?\x92\x91\x91\x91\x91\x91\xc1?\x14\x14\x14\x14\x14\x14\xc4?\x1e\x1e\x1e\x1e\x1e\x1e\xae?\x97\x96\x96\x96\x96\x96\xc6?\x97\x96\x96\x96\x96\x96\xc6?\x92\x91\x91\x91\x91\x91\xc1?\x14\x14\x14\x14\x14\x14\xc4?]t\xd1E\x17]\xc4?F\x17]t\xd1E\xc7?t\xd1E\x17]t\xb1?/\xba\xe8\xa2\x8b.\xca?F\x17]t\xd1E\xa7?]t\xd1E\x17]\xc4?F\x17]t\xd1E\xc7?Cy\r\xe55\x94\xc7?(\xaf\xa1\xbc\x86\xf2\xca?^Cy\r\xe55\xb4?\r\xe55\x94\xd7P\xce?(\xaf\xa1\xbc\x86\xf2\xaa?(\xaf\xa1\xbc\x86\xf2\x9a?(\xaf\xa1\xbc\x86\xf2\xca?\x00\x00\x00\x00\x00\x00\xcc?\x00\x00\x00\x00\x00\x00\xb0?\x00\x00\x00\x00\x00\x00\xb8?\x00\x00\x00\x00\x00\x00\xd2?\x00\x00\x00\x00\x00\x00\xb0?\x00\x00\x00\x00\x00\x00\xa0?\x00\x00\x00\x00\x00\x00\xd0?\xb1\x13;\xb1\x13;\xd1?\x14;\xb1\x13;\xb1\xb3?\x9e\xd8\x89\x9d\xd8\x89\xbd?\x9e\xd8\x89\x9d\xd8\x89\xbd?\x14;\xb1\x13;\xb1\xb3?\x14;\xb1\x13;\xb1\xa3?\x14;\xb1\x13;\xb1\xd3?\x18\x86a\x18\x86a\xb8?\x18\x86a\x18\x86a\xb8?\x92$I\x92$I\xc2?\x92$I\x92$I\xc2?\x18\x86a\x18\x86a\xb8?\x18\x86a\x18\x86a\xa8?\x18\x86a\x18\x86a\xd8?\x1c\xc7q\x1c\xc7q\xbc?\x1c\xc7q\x1c\xc7q\xbc?\x00\x00\x00\x00\x00\x00\x00\x00UUUUUU\xc5?\x1c\xc7q\x1c\xc7q\xbc?\x1c\xc7q\x1c\xc7q\xac?\x1c\xc7q\x1c\xc7q\xdc?\x14;\xb1\x13;\xb1\xc3?\x14;\xb1\x13;\xb1\xc3?\x00\x00\x00\x00\x00\x00\x00\x00\x9e\xd8\x89\x9d\xd8\x89\xcd?\x14;\xb1\x13;\xb1\xc3?\x14;\xb1\x13;\xb1\xb3?\x9e\xd8\x89\x9d\xd8\x89\xcd?\x9a\x99\x99\x99\x99\x99\xc9?\x9a\x99\x99\x99\x99\x99\xc9?\x00\x00\x00\x00\x00\x00\x00\x00333333\xd3?\x9a\x99\x99\x99\x99\x99\xc9?\x9a\x99\x99\x99\x99\x99\xb9?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd8?\x00\x00\x00\x00\x00\x00\xd0?\x00\x00\x00\x00\x00\x00\xc0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00UUUUUU\xd5?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0?\x00\x00\x00\x00\x00\x00\x00\x00UUUUUU\xc5?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe8?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xde\xdd\xdd\xdd\xdd\xdd\xed?\x00\x00\x00\x00\x00\x00\x00\x00\x11\x11\x11\x11\x11\x11\xb1?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x95 \x00\x00\x00\x00\x00\x00\x00ub\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.', threshold=None, logs={'model_name': 'DecisionTreeClassifier', 'max_depth': 32, 'min_samples_split': 4, 'random_state': 42, 'accuracy': 0.9866666666666667}),) {}.

20.08.2024 14:47:53 ::INFO:: Запрос к БД произведен успешно

20.08.2024 14:47:53 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='ComplexDecisionTreeModel', model_obj=None, threshold=None, logs={'model_name': 'ComplexDecisionTreeModel', 'accuracy': 1.0}),) {}.

20.08.2024 14:47:53 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:05 ::INFO:: Запрос на URL "/".

20.08.2024 15:39:05 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:39:05 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:05 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:39:05 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:05 ::INFO:: Запрос на URL "/".

20.08.2024 15:39:05 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:39:05 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:05 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:39:05 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:09 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[0,0,0,0,0,0],"down":[1,1,1,1,1,1]}'.

20.08.2024 15:39:09 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:39:09 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:09 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:39:09 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:13 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[0,0,0,0,0,0],"down":[1,1,1,1,1,0]}'.

20.08.2024 15:39:13 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:39:13 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:13 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:39:13 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:13 ::INFO:: Функция get_best_classifier_model производит запрос к БД с целью извлечения данных.

20.08.2024 15:39:13 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:13 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('StandardScaler',) {}.

20.08.2024 15:39:13 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:13 ::ERROR:: При обработке запроса на URL "/ordered_check" произошла критическая ошибка. 
Информация об ошибке: AttributeError("'Domino' object has no attribute 'first'")

20.08.2024 15:39:20 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[0,0,0,0,0,0],"down":[1,1,1,1,1,1]}'.

20.08.2024 15:39:20 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:39:20 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:20 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:39:20 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:25 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[0,0,0,0,0,0],"down":[1,1,1,1,1,1]}'.

20.08.2024 15:39:25 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:39:25 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:25 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:39:25 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:27 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[0,0,0,0,0,0],"down":[1,1,1,1,1,0]}'.

20.08.2024 15:39:27 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:39:27 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:27 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:39:27 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:27 ::INFO:: Функция get_best_classifier_model производит запрос к БД с целью извлечения данных.

20.08.2024 15:39:27 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:27 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('StandardScaler',) {}.

20.08.2024 15:39:27 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:27 ::ERROR:: При обработке запроса на URL "/ordered_check" произошла критическая ошибка. 
Информация об ошибке: AttributeError("'Domino' object has no attribute 'first'")

20.08.2024 15:39:34 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[6,0,4,2,1,5],"down":[3,5,1,6,3,1]}'.

20.08.2024 15:39:34 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:39:34 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:34 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:39:34 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:34 ::INFO:: Функция get_best_classifier_model производит запрос к БД с целью извлечения данных.

20.08.2024 15:39:34 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:34 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('StandardScaler',) {}.

20.08.2024 15:39:34 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:39:34 ::ERROR:: При обработке запроса на URL "/ordered_check" произошла критическая ошибка. 
Информация об ошибке: AttributeError("'Domino' object has no attribute 'first'")

20.08.2024 15:39:37 ::INFO:: Запрос на URL "/static/scripts/bootstrap.js.map".

20.08.2024 15:39:37 ::INFO:: Запрос на URL "/static/scripts/bootstrap.bundle.js.map".

20.08.2024 15:40:25 ::INFO:: Запрос на URL "/".

20.08.2024 15:40:25 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:40:25 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:40:25 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:40:25 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:40:25 ::INFO:: Запрос на URL "/".

20.08.2024 15:40:25 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:40:25 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:40:25 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:40:25 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:40:30 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[0,0,0,0,0,0],"down":[0,1,2,2,2,2]}'.

20.08.2024 15:40:30 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:40:30 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:40:30 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:40:30 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:40:30 ::INFO:: Функция get_best_classifier_model производит запрос к БД с целью извлечения данных.

20.08.2024 15:40:30 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:40:30 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('StandardScaler',) {}.

20.08.2024 15:40:30 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:40:30 ::ERROR:: При обработке запроса на URL "/ordered_check" произошла критическая ошибка. 
Информация об ошибке: AttributeError("'Domino' object has no attribute 'first'")

20.08.2024 15:41:31 ::INFO:: Запрос на URL "/".

20.08.2024 15:41:31 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:41:31 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:31 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:41:31 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:31 ::INFO:: Запрос на URL "/".

20.08.2024 15:41:31 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:41:31 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:31 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:41:31 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:35 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[0,0,0,0,0],"down":[0,1,1,1,2]}'.

20.08.2024 15:41:35 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:41:35 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:36 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:41:36 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:36 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (0, 2) {}.

20.08.2024 15:41:36 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:39 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[0,0,0,0,0,0],"down":[0,1,1,1,2,2]}'.

20.08.2024 15:41:39 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:41:39 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:39 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:41:39 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:43 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[0,0,0,0,2,2],"down":[0,1,1,1,0,0]}'.

20.08.2024 15:41:43 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:41:43 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:43 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:41:43 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:43 ::INFO:: Функция get_best_classifier_model производит запрос к БД с целью извлечения данных.

20.08.2024 15:41:43 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:43 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('StandardScaler',) {}.

20.08.2024 15:41:43 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:50 ::INFO:: Запрос на URL "/ordered_check" с передаваемыми данными b'{"up":[0,1,4,2,1,5],"down":[0,4,3,4,0,6]}'.

20.08.2024 15:41:50 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:41:50 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:50 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:41:50 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:50 ::INFO:: Функция get_best_classifier_model производит запрос к БД с целью извлечения данных.

20.08.2024 15:41:50 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:41:50 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('StandardScaler',) {}.

20.08.2024 15:41:50 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:24 ::INFO:: Запрос на URL "/".

20.08.2024 15:51:24 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:24 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:24 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:24 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:24 ::INFO:: Запрос на URL "/".

20.08.2024 15:51:24 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:24 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:24 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:24 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:26 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[5,5,5,5,5],"down":[0,0,0,0,0]}'.

20.08.2024 15:51:26 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:51:26 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:26 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:51:26 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:26 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (5, 0) {}.

20.08.2024 15:51:26 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:26 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[5,5,5,5,5],"down":[0,0,0,0,0]}'.

20.08.2024 15:51:26 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:51:26 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:26 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:51:26 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:26 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (5, 0) {}.

20.08.2024 15:51:26 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:29 ::INFO:: Запрос на URL "/".

20.08.2024 15:51:29 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:29 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:29 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:29 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:29 ::INFO:: Запрос на URL "/".

20.08.2024 15:51:29 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:29 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:29 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:29 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:31 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[1,1,1,1,1],"down":[0,0,0,0,0]}'.

20.08.2024 15:51:31 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:51:31 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:31 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:51:31 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:31 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (1, 0) {}.

20.08.2024 15:51:31 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:37 ::INFO:: Запрос на URL "/".

20.08.2024 15:51:37 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:37 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:37 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:37 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:37 ::INFO:: Запрос на URL "/".

20.08.2024 15:51:37 ::INFO:: Функция get_all_pictures производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:37 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:37 ::INFO:: Функция get_empty_picture производит запрос к БД с целью извлечения данных.

20.08.2024 15:51:37 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:39 ::INFO:: Запрос на URL "/predict" с передаваемыми данными b'{"up":[5,5,5,5,5],"down":[1,1,1,1,1]}'.

20.08.2024 15:51:39 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('RandomForestClassifier',) {}.

20.08.2024 15:51:39 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:39 ::INFO:: Функция get_ml_learned производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы ('DecisionTreeClassifier',) {}.

20.08.2024 15:51:39 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:39 ::INFO:: Функция get_img_bytes производит запрос к БД с целью извлечения данных.
В функцию переданы аргументы (5, 1) {}.

20.08.2024 15:51:39 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:53 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='LinearRegression', model_obj=b'\x80\x04\x95W\x01\x00\x00\x00\x00\x00\x00\x8c\x1asklearn.linear_model._base\x94\x8c\x10LinearRegression\x94\x93\x94)\x81\x94}\x94(\x8c\rfit_intercept\x94\x88\x8c\x06copy_X\x94\x88\x8c\x06n_jobs\x94N\x8c\x08positive\x94\x89\x8c\x0en_features_in_\x94K\x18\x8c\x05coef_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94\x8c\x05numpy\x94\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x01K\x18\x86\x94\x8c\x05order\x94\x8c\x01C\x94\x8c\x05dtype\x94h\x11\x8c\x05dtype\x94\x93\x94\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\r\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x88R\x00\x1c\xd1R\xc0\xbf\xf0u\xea5h\xd5\x80\xbf\xf6\x96\x82\x9c\xcb\xfb\x85\xbf<\x01\x13\xac9\xc7\x99\xbf@\x01z\x9d\xd6\x1a\xb1?\xdcl\xb7NC\x15\xac?\x94\xa5\xa6\x0e\x10\xa4\xa0\xbf\xfa\xc0M_\x8ex\xa3?;S\x00\x1c\xd1R\xc0\xbfzv\xea5h\xd5\x80\xbf\xac\x95\x82\x9c\xcb\xfb\x85\xbf^\x03\x13\xac9\xc7\x99\xbf\x14\x01z\x9d\xd6\x1a\xb1?\x08o\xb7NC\x15\xac?\x15\xa6\xa6\x0e\x10\xa4\xa0\xbf\xce\xc1M_\x8ex\xa3?\x8c\x1e\r\x9d\x08Q\x91\xbf\x1e\xb5i\xb2)\xaev\xbfC\x13\xa4\x8a\x8b\xb2\xac?u\xf6w\x0c\r\x9b\x89?\xe0<&\xd9h\xa0b?\x14[\xd4\x8cZ\xbf\x89\xbfm\xc4\x1d\xae\xef\x17\x92?\xe5\xe1b\x15\xac\xa3\xa0?\x959\x00\x00\x00\x00\x00\x00\x00\x8c\x05rank_\x94K\x18\x8c\tsingular_\x94h\r)\x81\x94}\x94(h\x10h\x13h\x14K\x18\x85\x94h\x16h\x17h\x18h\x1dh \x88h!K\x10ub\r\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff]\xbd\x1a\x0fAT\x8c@,\x89\x8d\xfb\xfb\xa4\x84@\xc9\x17\xec\x9c\xea9\x82@0\x0e\xb6\xc2p\xca\x81@\xda\xf1\x8ec\x04/\x81@\x0e\\\xfa\xca-\xfc~@\xee1b=*\xdf~@\xbd\xe7\x87\xf7\xc3\xbe{@\xb7g\xf8\x94\xc1\x12z@q\xc2\xd3\xe0\xf3\x05y@\x08#\xac\xa8Q\x0bu@6z\x84\xe8\xea\x96t@wZO\xbd\x1f\x91t@\xef\xd1\x9b\xef\x15\xdeq@\x16\xd8H\x9dI>o@x\xd0\xae\x84rKk@C\xdbF\xb5C\x15k@\x1cX\xd1\xc6c\xffh@\xf7\x00\x16\x11\x9d;g@\xd7\x8cC1\xe3\xb8f@9\xfal\xa0\xbesc@I\xce\xeb<o\xb4\\@\x0b\'Q\xbfS\x04\\@">\rxv\xa8V@\x950\x00\x00\x00\x00\x00\x00\x00\x8c\nintercept_\x94h\r)\x81\x94}\x94(h\x10h\x13h\x14K\x01\x85\x94h\x16h\x17h\x18h\x1dh \x88h!K\x10ub\x06\xff\xff\xff\xff\xff\xff\tI\xdf\xb0\xa1\x14\xc6?\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.', threshold=0.5, logs={'model_name': 'LinearRegression', 'AUC': 0.5, 'intercept_': np.float64(0.17250462662065782), 'coef_': [np.float64(-0.12752736918686858), np.float64(-0.008219541688329252), np.float64(-0.010734167779740993), np.float64(-0.025174046638086298), np.float64(0.06681577057498078), np.float64(0.054849723204563466), np.float64(-0.032501699245879895), np.float64(0.03802914536834297), np.float64(-0.12752736918687355), np.float64(-0.008219541688329491), np.float64(-0.01073416777974042), np.float64(-0.025174046638088192), np.float64(0.06681577057498017), np.float64(0.054849723204567324), np.float64(-0.03250169924588079), np.float64(0.03802914536834444), np.float64(-0.016910681329390928), np.float64(-0.00553718841420661), np.float64(0.05604969088930158), np.float64(0.012502767508517846), np.float64(0.0022737548653776057), np.float64(-0.012572009489799231), np.float64(0.017669434549536), np.float64(0.0324987197977327)], 'col_names': {'entrope': np.float64(-0.12752736918686858), 'entrope_secondary': np.float64(-0.008219541688329252), 'entrope_ternary': np.float64(-0.010734167779740993), 'clear_ordered': np.float64(-0.025174046638086298), 'secondary_ordered': np.float64(0.06681577057498078), 'ternary_ordered': np.float64(0.054849723204563466), 'order_degree': np.float64(-0.032501699245879895), 'binary_order_degree': np.float64(0.03802914536834297)}, 'precision': np.float64(0.9885347842984843), 'recall': np.float64(0.9043555555555556), 'accuracy': 0.9798650927487352, 'f1': np.float64(0.9798650927487352)}),) {}.

20.08.2024 15:51:53 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:53 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='StandardScaler', model_obj=b'\x80\x04\x95\xad\x01\x00\x00\x00\x00\x00\x00\x8c\x1bsklearn.preprocessing._data\x94\x8c\x0eStandardScaler\x94\x93\x94)\x81\x94}\x94(\x8c\twith_mean\x94\x88\x8c\x08with_std\x94\x88\x8c\x04copy\x94\x88\x8c\x0en_features_in_\x94K\x18\x8c\x0fn_samples_seen_\x94\x8c\x16numpy._core.multiarray\x94\x8c\x06scalar\x94\x93\x94\x8c\x05numpy\x94\x8c\x05dtype\x94\x93\x94\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bC\x08\xd2s\x00\x00\x00\x00\x00\x00\x94\x86\x94R\x94\x8c\x05mean_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94h\r\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x18\x85\x94\x8c\x05order\x94\x8c\x01C\x94\x8c\x05dtype\x94h\x0f\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03h\x13NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\x07\xff\xff\xff\xff\xff\xff\xff\xcaw\x16\xc8\x0fP\xfd?\x95(\x16j[c\xe2?lw\x1c\x98LQ\xf0?\x195\xf5H\'\x15\x7f?\x1e\x82i\xd2\xcf\xf5\xad?V\xef|\xb5"6\xc9?\x98\xefE\xfe\xc3\x1a\n@\x0f\x8a}\x8a\xcc\x03\xfc?px\x16\xc8\x0fP\xfd?\x05*\x16j[c\xe2? w\x1c\x98LQ\xf0?\x195\xf5H\'\x15\x7f?\x1e\x82i\xd2\xcf\xf5\xad?V\xef|\xb5"6\xc9?\x98\xefE\xfe\xc3\x1a\n@\x0f\x8a}\x8a\xcc\x03\xfc?\t\xcc\x99\xd1<X\xcd?\x9f\xceY\x8c \xac\xc3?:\xff+g\x8a\xc8\xcb?\xa8z\x99\x08\xde\xd6\x8d?HF\n%G\xa8\xb7?-F ;\xa0\x19\xd4?\xf7\x9a"L/\xc5\xfd?9,\xa7WL\x03\xc9?\x95*\x00\x00\x00\x00\x00\x00\x00\x8c\x04var_\x94h\x1b)\x81\x94}\x94(h\x1eh h!K\x18\x85\x94h#h$h%h(h*\x88h+K\x10ub\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xab\x190n{i\xca?\xe3(\xf40:\xf6\xb8?\xbe\xac\x17+\xe5\xad\xc4?t\xca\xc24\xc5\xd8~?L\xaf\xdaC\x015\xac?\xb0\x91EA\xe6>\xc4?\xda\xe2.<,\xdf\xed?e\xb3\xf5\x81[!\xb9?\xfc\x1b0n{i\xca?\x9f*\xf40:\xf6\xb8?8\xab\x17+\xe5\xad\xc4?\xb8\xcf\xc24\xc5\xd8~?\xd4\xae\xdaC\x015\xac?\x18\x95EA\xe6>\xc4?8\xe5.<,\xdf\xed?\x8b\xb5\xf5\x81[!\xb9?\xf0}\xa4\xee\x1d\xb7\xc5?\xb6^\xa5\x887\x9a\xad?\x873}!4D\xc0?[\x11\xdc\xb3\x91g\x8d?\x14\xf2\xed\xbe\x9bx\xb5?l\x80\xd9\xa6#\x93\xcb?\x83\x0br\x1ezF\x17@\xeaH\xcbWl\x18\xb5?\x95,\x00\x00\x00\x00\x00\x00\x00\x8c\x06scale_\x94h\x1b)\x81\x94}\x94(h\x1eh h!K\x18\x85\x94h#h$h%h(h*\x88h+K\x10ub\n\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffn\x1212s\x12\xdd?\xfc\xbd\xe8\xe4\x16\xfc\xd3?\xbf\x8e5Eh\xb9\xd9?\x07U\xe7\x12H7\xb6?<D=\xc91\x0b\xce?\x08Aj\x1a\x01t\xd9?\x9dp\x1a\\\xe6\xea\xee?Lj\x1e]S\r\xd4?\xb4\x1312s\x12\xdd?\xae\xbe\xe8\xe4\x16\xfc\xd3?\xcc\x8d5Eh\xb9\xd9?\xecV\xe7\x12H7\xb6?\xfcC=\xc91\x0b\xce?,Cj\x1a\x01t\xd9?\xd6q\x1a\\\xe6\xea\xee?(k\x1e]S\r\xd4?\xd2\x1d\xc1\xb3Z\\\xda?]x\xddO"\xc7\xce?4\x10\x1a\x9b\xa5\xd0\xd6?\x82s\x01\xac\xc2\xac\xbe?\xf8\xe1\xdbB\xe7\x88\xd2?\x01\x07r\xd1\x80\xb4\xdd?\xc2\x9dF)<L\x03@d\x90\x82`4_\xd2?\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.', threshold=None, logs=None),) {}.

20.08.2024 15:51:53 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:54 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='LogisticRegression', model_obj=b'\x80\x04\x95\x16\x02\x00\x00\x00\x00\x00\x00\x8c\x1esklearn.linear_model._logistic\x94\x8c\x12LogisticRegression\x94\x93\x94)\x81\x94}\x94(\x8c\x07penalty\x94\x8c\x02l2\x94\x8c\x04dual\x94\x89\x8c\x03tol\x94G?\x1a6\xe2\xeb\x1cC-\x8c\x01C\x94G?\xe0\x00\x00\x00\x00\x00\x00\x8c\rfit_intercept\x94\x88\x8c\x11intercept_scaling\x94K\x01\x8c\x0cclass_weight\x94N\x8c\x0crandom_state\x94N\x8c\x06solver\x94\x8c\x05lbfgs\x94\x8c\x08max_iter\x94Kd\x8c\x0bmulti_class\x94\x8c\ndeprecated\x94\x8c\x07verbose\x94K\x00\x8c\nwarm_start\x94\x89\x8c\x06n_jobs\x94N\x8c\x08l1_ratio\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\x0en_features_in_\x94K\x18\x8c\x08classes_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94\x8c\x05numpy\x94\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x02\x85\x94\x8c\x05order\x94h\t\x8c\x05dtype\x94h\x1f\x8c\x05dtype\x94\x93\x94\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\x0e\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x95O\x00\x00\x00\x00\x00\x00\x00\x8c\x07n_iter_\x94h\x1b)\x81\x94}\x94(h\x1eh!h"K\x01\x85\x94h$h\th%h\'\x8c\x02i4\x94\x89\x88\x87\x94R\x94(K\x03h+NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bh-\x88h.K\x10ub\x07\xff\xff\xff\xff\xff\xff\xff\x15\x00\x00\x00\x95O\x00\x00\x00\x00\x00\x00\x00\x8c\x05coef_\x94h\x1b)\x81\x94}\x94(h\x1eh!h"K\x01K\x18\x86\x94h$h\th%h\'\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03h+NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bh-\x88h.K\x10ub\x03\xff\xff\xff\xa3^N\xbf\xe9p\x0c\xc0wE?\x1a\xa5{\xf8\xbf\xfa\xa6\xce\xc4pF\xeb?&n\xe1\xf8o\x93\xe3?\xb1\x81\xd7\x88y\xdf\xf3?5\xe2Y\xffh0\xf8?\xf8\xcf\xf6S\x8d_\xe5\xbf\x08AaW ]\xe6?\xc0_N\xbf\xe9p\x0c\xc0+F?\x1a\xa5{\xf8\xbf\xb8\xa5\xce\xc4pF\xeb?+m\xe1\xf8o\x93\xe3?\xd8\x81\xd7\x88y\xdf\xf3?q\xe4Y\xffh0\xf8?\x18\xd1\xf6S\x8d_\xe5\xbf;BaW ]\xe6?\xe5.\x1en\x8do\xf0?;\xf4\x10G\xadM\xf3?\xfb^j\xc4\xee\xee\xd2?\xd2\x0f9\x14\x86"\xeb?\x8c\xcd\x86Q\xb3f\x9c?\x01\x13\xc1\xa7e\xd1\xca\xbf\xc5\xc3\xb4\xba\x0eE\xcc\xbfm\xba\x94\xd9\xda\xa3\xdb?\x950\x00\x00\x00\x00\x00\x00\x00\x8c\nintercept_\x94h\x1b)\x81\x94}\x94(h\x1eh!h"K\x01\x85\x94h$h\th%h=h-\x88h.K\x10ub\x06\xff\xff\xff\xff\xff\xff1e\xd0.\xae\x15\x1e\xc0\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.', threshold=0.52, logs={'model_name': 'LogisticRegression', 'C': 0.5, 'dual': False, 'l1_ratio': 0.1, 'penalty': 'l2', 'AUC': 0.52, 'intercept_': np.float64(-7.521172267407835), 'coef_': [np.float64(-3.555133337573197), np.float64(-1.530186750915474), np.float64(0.852348694218761), np.float64(0.6117477284382786), np.float64(1.2420592637427996), np.float64(1.5118188833859112), np.float64(-0.6679140701221504), np.float64(0.6988679606093067), np.float64(-3.5551333375733236), np.float64(-1.530186750915514), np.float64(0.8523486942187253), np.float64(0.6117477284382508), np.float64(1.2420592637428083), np.float64(1.5118188833860382), np.float64(-0.6679140701221824), np.float64(0.6988679606093408), np.float64(1.0272344876747692), np.float64(1.206464078524063), np.float64(0.2958332937355263), np.float64(0.8479643244722814), np.float64(0.027735521174418618), np.float64(-0.2095152920830046), np.float64(-0.22085746876248727), np.float64(0.43187590835706297)], 'col_names': {'entrope': np.float64(-3.555133337573197), 'entrope_secondary': np.float64(-1.530186750915474), 'entrope_ternary': np.float64(0.852348694218761), 'clear_ordered': np.float64(0.6117477284382786), 'secondary_ordered': np.float64(1.2420592637427996), 'ternary_ordered': np.float64(1.5118188833859112), 'order_degree': np.float64(-0.6679140701221504), 'binary_order_degree': np.float64(0.6988679606093067)}, 'precision': np.float64(0.9957415293464174), 'recall': np.float64(0.9560888888888889), 'accuracy': 0.990893760539629, 'f1': np.float64(0.990893760539629)}),) {}.

20.08.2024 15:51:54 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:58 ::INFO:: Функция model_to_db производит запрос к БД с целью занесения данных.
В функцию переданы аргументы (ML_Object(model_name='SGDClassifier', model_obj=b"\x80\x04\x95\x91\x02\x00\x00\x00\x00\x00\x00\x8c)sklearn.linear_model._stochastic_gradient\x94\x8c\rSGDClassifier\x94\x93\x94)\x81\x94}\x94(\x8c\x04loss\x94\x8c\x0emodified_huber\x94\x8c\x07penalty\x94N\x8c\rlearning_rate\x94\x8c\x07optimal\x94\x8c\x07epsilon\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\x05alpha\x94G?\x1a6\xe2\xeb\x1cC-\x8c\x01C\x94G?\xf0\x00\x00\x00\x00\x00\x00\x8c\x08l1_ratio\x94G?\xc3333333\x8c\rfit_intercept\x94\x88\x8c\x07shuffle\x94\x88\x8c\x0crandom_state\x94N\x8c\x07verbose\x94K\x00\x8c\x04eta0\x94G\x00\x00\x00\x00\x00\x00\x00\x00\x8c\x07power_t\x94G?\xe0\x00\x00\x00\x00\x00\x00\x8c\x0eearly_stopping\x94\x89\x8c\x13validation_fraction\x94G?\xb9\x99\x99\x99\x99\x99\x9a\x8c\x10n_iter_no_change\x94K\x05\x8c\nwarm_start\x94\x89\x8c\x07average\x94\x89\x8c\x08max_iter\x94M\xe8\x03\x8c\x03tol\x94G?PbM\xd2\xf1\xa9\xfc\x8c\x0cclass_weight\x94N\x8c\x06n_jobs\x94K\x01\x8c\x05coef_\x94\x8c\x13joblib.numpy_pickle\x94\x8c\x11NumpyArrayWrapper\x94\x93\x94)\x81\x94}\x94(\x8c\x08subclass\x94\x8c\x05numpy\x94\x8c\x07ndarray\x94\x93\x94\x8c\x05shape\x94K\x01K\x18\x86\x94\x8c\x05order\x94h\x0c\x8c\x05dtype\x94h$\x8c\x05dtype\x94\x93\x94\x8c\x02f8\x94\x89\x88\x87\x94R\x94(K\x03\x8c\x01<\x94NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94b\x8c\nallow_mmap\x94\x88\x8c\x1bnumpy_array_alignment_bytes\x94K\x10ub\x03\xff\xff\xff\n\xb7\x90n\xe1\xd0\\\xc0\xa8\x80\xd3\x11\xb7\xc3M\xc0\xf0\x1fV\xf8\x15\x81I@\x8d/\t\xf2\xccoq@\xe5u!d~\xd6>@\x1e\xb1\x12\xca\xadvC@\xd4\x16\xf4T\x19\x8f\x0f\xc0gl\x1bi\x1f\xb77@r~\x9f\r:\x8b\\\xc0L\xa5\x9f\x8b\x83\xa3M\xc0\x1f<\x1d\xad\x86\xf7H@\xf7\xa3T\x972\xb0-@$g=z\xbb\x1d?@\x04\xe7\xb5\x94\x05\x9aC@^\xcd\x94L\xf0\xfa\x12\xc0\x01z\xda\xfb\xc6Y7@\xbe\xbfr\xf6\x11\x88A@|\x1e\x8f\xc4\xef<F@w\xf2&|\x95t\x15\xc00!\x7f\x969~j@6\xc0p\xf3.l\x07\xc07{\x83\xfd\x1a\r'\xc0\x8ax\xc8i \xde\x15\xc0\x85\x9b1=\xdd$.@\x950\x00\x00\x00\x00\x00\x00\x00\x8c\nintercept_\x94h )\x81\x94}\x94(h#h&h'K\x01\x85\x94h)h\x0ch*h/h2\x88h3K\x10ub\x06\xff\xff\xff\xff\xff\xff\xa0\xe3\x1b\xcd&8e\xc0\x95q\x00\x00\x00\x00\x00\x00\x00\x8c\x02t_\x94GA\x8d\x8b\xfd\x98\x00\x00\x00\x8c\x0en_features_in_\x94K\x18\x8c\x08classes_\x94h )\x81\x94}\x94(h#h&h'K\x02\x85\x94h)h\x0ch*h,\x8c\x02i8\x94\x89\x88\x87\x94R\x94(K\x03h0NNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00t\x94bh2\x88h3K\x10ub\r\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x95<\x00\x00\x00\x00\x00\x00\x00\x8c\x16_expanded_class_weight\x94h )\x81\x94}\x94(h#h&h'K\x02\x85\x94h)h\x0ch*h/h2\x88h3K\x10ub\n\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x95s\x00\x00\x00\x00\x00\x00\x00\x8c\x0f_loss_function_\x94\x8c\x1esklearn.linear_model._sgd_fast\x94\x8c\rModifiedHuber\x94\x93\x94)R\x94\x8c\x07n_iter_\x94M\x81\x01\x8c\x10_sklearn_version\x94\x8c\x051.5.1\x94ub.", threshold=0.68, logs={'model_name': 'SGDClassifier', 'loss': 'modified_huber', 'penalty': None, 'n_jobs': 1, 'AUC': 0.68, 'intercept_': np.float64(-169.75473647544004), 'coef_': [np.float64(-115.2637592709763), np.float64(-59.52902434184335), np.float64(51.0084829731494), np.float64(278.98753551090414), np.float64(30.83786607567699), np.float64(38.92717862999619), np.float64(-3.9448725354185203), np.float64(23.715323037333658), np.float64(-114.17541828704432), np.float64(-59.27745194716644), np.float64(49.93379749228938), np.float64(14.844135979730693), np.float64(31.116141929617825), np.float64(39.20329531557039), np.float64(-4.74505729349343), np.float64(23.350692501868256), np.float64(35.06304817774752), np.float64(44.47606713283764), np.float64(-5.363851489903587), np.float64(211.94452977018364), np.float64(-2.9278239268096753), np.float64(-11.525596544551815), np.float64(-5.466920521603365), np.float64(15.072000419908145)], 'col_names': {'entrope': np.float64(-115.2637592709763), 'entrope_secondary': np.float64(-59.52902434184335), 'entrope_ternary': np.float64(51.0084829731494), 'clear_ordered': np.float64(278.98753551090414), 'secondary_ordered': np.float64(30.83786607567699), 'ternary_ordered': np.float64(38.92717862999619), 'order_degree': np.float64(-3.9448725354185203), 'binary_order_degree': np.float64(23.715323037333658)}, 'precision': np.float64(0.9944382647385984), 'recall': np.float64(0.9536), 'accuracy': 0.990185497470489, 'f1': np.float64(0.990185497470489)}),) {}.

20.08.2024 15:51:58 ::INFO:: Запрос к БД произведен успешно

20.08.2024 15:51:58 ::INFO:: Функция set_best_model производит запрос к БД с целью занесения данных.
В функцию переданы аргументы ('LogisticRegression',) {}.

20.08.2024 15:51:58 ::INFO:: Запрос к БД произведен успешно

